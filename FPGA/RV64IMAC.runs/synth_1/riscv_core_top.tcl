# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_msg_config  -ruleid {5}  -id {[BD 41-1306]}  -suppress 
set_msg_config  -ruleid {6}  -id {[BD 41-1271]}  -suppress 
create_project -in_memory -part xcku040-ffva1156-2-e

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir C:/Users/majii/Documents/Vivado/RV64IMAC/RV64IMAC.cache/wt [current_project]
set_property parent.project_path C:/Users/majii/Documents/Vivado/RV64IMAC/RV64IMAC.xpr [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property board_part xilinx.com:kcu105:part0:1.4 [current_project]
set_property ip_output_repo c:/Users/majii/Documents/Vivado/RV64IMAC/RV64IMAC.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog -library xil_defaultlib -sv {
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_64bit_adder.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_alu.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_alu_decoder.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_booth.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_branch_unit.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_compressed_decoder.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_dcache_controller.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_dcache_memory.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_dcache_top.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_div_in.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_div_out.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_hazard_unit.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_icache_controller.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_icache_memory.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_icache_top.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_immextend.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_main_decoder.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mul_div.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mul_div_ctrl.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mul_in.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mul_out.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mux2x1.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mux3x1.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_mux4x1.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_non_restoring.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_pcsrc.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_pipe.sv
  C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/sim/riscv_core_rf.sv
}
read_verilog -library xil_defaultlib C:/Users/majii/Documents/MyGit/Verilog/RV64IMAC/src/riscv_core_top.v
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
set_param ips.enableIPCacheLiteLoad 0
close [open __synthesis_is_running__ w]

synth_design -top riscv_core_top -part xcku040-ffva1156-2-e


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef riscv_core_top.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file riscv_core_top_utilization_synth.rpt -pb riscv_core_top_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
